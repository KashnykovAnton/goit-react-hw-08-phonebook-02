{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Pages/LoginPage/LoginPage.module.css","Pages/LoginPage/LoginPage.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","module","exports","Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","name","value","mailId","uuidv4","passId","className","styles","title","form","onSubmit","preventDefault","user","loginThunk","label","htmlFor","input","type","pattern","placeholder","required","id","onChange","button"],"mappings":"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","file":"static/js/login-page.19a69a63.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"LoginPage_title__33xuA\",\"form\":\"LoginPage_form__QKrCD\",\"label\":\"LoginPage_label__2Xxuq\",\"input\":\"LoginPage_input__3LXOn\",\"button\":\"LoginPage_button__2i4V4\"};","import styles from 'Pages/LoginPage/LoginPage.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/auth/authThunks';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const user = { email, password };\n    dispatch(loginThunk(user));\n    setEmail('');\n    setPassword('');\n  };\n\n  const mailId = uuidv4();\n  const passId = uuidv4();\n  return (\n    <>\n      <h1 className={styles.title}>Login</h1>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.label} htmlFor={mailId}>\n          Mail\n        </label>\n        <input\n          className={styles.input}\n          type=\"mail\"\n          name=\"email\"\n          pattern=\"[a-zA-Z0-9._%+-]+@[a-z0-9.-]+.[a-z]\"\n          title=\"Email must be in the following order: characters@characters.domain\"\n          placeholder=\"Please enter email\"\n          required\n          value={email}\n          id={mailId}\n          onChange={handleChange}\n        />\n        <label className={styles.label} htmlFor={passId}>\n          Password\n        </label>\n        <input\n          className={styles.input}\n          type=\"password\"\n          name=\"password\"\n          pattern=\"(?=.*\\d).{6,}\"\n          title=\"Must contain at least 6 or more characters\"\n          placeholder=\"Please enter password\"\n          required\n          value={password}\n          id={passId}\n          onChange={handleChange}\n        />\n        <button className={styles.button} type=\"submit\">\n          Log in\n        </button>\n      </form>\n    </>\n  );\n}\n"],"sourceRoot":""}